apiVersion: v1
kind: ConfigMap
metadata:
  name: cm-nginx-index
data:
  index.html: |
    <!DOCTYPE html>
    <html lang="en">
    <head>
      <meta charset="UTF-8" />
      <title>Stock Portfolio Tracker</title>
      <meta name="viewport" content="width=device-width, initial-scale=1" />
      <style>
        body {
          background-color: #0e0e10;
          color: #f5f5f5;
          font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
          margin: 0;
          padding: 0;
        }
    
        header {
          background-color: #1a1a1d;
          padding: 20px;
          text-align: center;
          border-bottom: 1px solid #333;
        }
    
        h1 {
          margin: 0;
          font-size: 24px;
          color: #fff;
        }
    
        .container {
          max-width: 900px;
          margin: 40px auto;
          padding: 20px;
          background-color: #1c1c1e;
          border-radius: 8px;
          box-shadow: 0 0 20px rgba(0,0,0,0.4);
        }
    
        form {
          display: flex;
          flex-wrap: wrap;
          gap: 10px;
          margin-bottom: 20px;
        }
    
        input, button {
          padding: 10px;
          border-radius: 4px;
          border: none;
          font-size: 14px;
        }
    
        input[type="text"], input[type="number"] {
          flex: 1;
          min-width: 150px;
        }
    
        button {
          background-color: #4caf50;
          color: white;
          cursor: pointer;
          flex-shrink: 0;
        }
    
        button:hover {
          background-color: #45a049;
        }
    
        table {
          width: 100%;
          border-collapse: collapse;
          background-color: #2a2a2e;
          color: #ddd;
        }
    
        th, td {
          padding: 12px;
          border-bottom: 1px solid #444;
          text-align: left;
        }
    
        th {
          background-color: #18181b;
        }
    
        tr:hover {
          background-color: #333;
        }
    
        .action-btn {
          padding: 6px 10px;
          margin-left: 5px;
          border-radius: 3px;
          font-size: 12px;
          cursor: pointer;
        }
    
        .edit-btn {
          background-color: #ffc107;
          color: #000;
        }
    
        .remove-btn {
          background-color: #dc3545;
          color: white;
        }
    
        .footer {
          text-align: center;
          font-size: 12px;
          color: #666;
          padding: 20px;
        }
      </style>
    </head>
    <body>
      <header>
        <h1>My Stock Portfolio</h1>
      </header>
    
      <div class="container">
        <form id="stock-form">
          <input type="text" id="ticker" placeholder="Ticker (e.g. AAPL)" required />
          <input type="number" id="units" placeholder="Units (e.g. 10)" required />
          <input type="number" id="price" step="0.01" placeholder="Bought Price (e.g. 150.00)" required />
          <button type="submit">Add Stock</button>
        </form>
    
        <table id="portfolio-table">
          <thead>
            <tr>
              <th>Ticker</th>
              <th>Units</th>
              <th>Bought Price</th>
              <th>Total Cost</th>
              <th>Actions</th>
            </tr>
          </thead>
          <tbody>
            <!-- Stock rows will appear here -->
          </tbody>
        </table>
      </div>
    
      <div class="footer">
        Build by Peleg Levy
      </div>
    
      <script>
        const form = document.getElementById('stock-form');
        const tableBody = document.querySelector('#portfolio-table tbody');
    
        form.addEventListener('submit', function (e) {
          e.preventDefault();
    
          const ticker = document.getElementById('ticker').value.trim().toUpperCase();
          const units = parseFloat(document.getElementById('units').value);
          const price = parseFloat(document.getElementById('price').value);
          const total = (units * price).toFixed(2);
    
          if (ticker && units && price) {
            addRow(ticker, units, price, total);
            form.reset();
          }
        });
    
        function addRow(ticker, units, price, total) {
          const row = document.createElement('tr');
    
          row.innerHTML = `
            <td>${ticker}</td>
            <td>${units}</td>
            <td>$${price.toFixed(2)}</td>
            <td>$${total}</td>
            <td>
              <button class="action-btn edit-btn">Edit</button>
              <button class="action-btn remove-btn">Remove</button>
            </td>
          `;
    
          tableBody.appendChild(row);
    
          const editBtn = row.querySelector('.edit-btn');
          const removeBtn = row.querySelector('.remove-btn');
    
          editBtn.addEventListener('click', () => {
            const newTicker = prompt("Enter new ticker:", ticker);
            const newUnits = parseFloat(prompt("Enter new units:", units));
            const newPrice = parseFloat(prompt("Enter new bought price:", price));
    
            if (newTicker && newUnits && newPrice) {
              const newTotal = (newUnits * newPrice).toFixed(2);
              row.children[0].textContent = newTicker.toUpperCase();
              row.children[1].textContent = newUnits;
              row.children[2].textContent = `$${newPrice.toFixed(2)}`;
              row.children[3].textContent = `$${newTotal}`;
            }
          });
    
          removeBtn.addEventListener('click', () => {
            if (confirm('Are you sure you want to remove this stock?')) {
              row.remove();
            }
          });
        }
      </script>
    </body>
    </html>

